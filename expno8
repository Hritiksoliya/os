#include <iostream>
using namespace std;

void firstFit(int blockSizes[], int m, int processSizes[], int n) {
    int allocation[n];
    fill_n(allocation, n, -1);  // Initialize all allocations to -1

    // Iterate over each process
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < m; j++) {
            if (blockSizes[j] >= processSizes[i]) {
                allocation[i] = j;
                blockSizes[j] -= processSizes[i];
                break;
            }
        }
    }

    // Print the allocation result
    cout << "Student No.\tMemory Requirement\tBlock No.\n";
    for (int i = 0; i < n; i++) {
        cout << "Student " << i + 1 << "\t\t" << processSizes[i] << "\t\t";
        if (allocation[i] != -1)
            cout << allocation[i] + 1;
        else
            cout << "Not Allocated";
        cout << endl;
    }
}

int main() {
    int blockSizes[] = {250, 400, 350, 600, 700};
    int processSizes[] = {300, 200, 400, 500};
    int m = sizeof(blockSizes) / sizeof(blockSizes[0]);
    int n = sizeof(processSizes) / sizeof(processSizes[0]);

    firstFit(blockSizes, m, processSizes, n);

    return 0;
}
